
__int64 __fastcall Decryptansi(unsigned __int16 *a1, char *a2)
{
  char *v2; // rdi
  int v4; // ebx
  int v5; // edx
  __int64 result; // rax
  int v7; // ecx
  unsigned int v8; // eax

  v2 = a2;
  memcpy(a2, a1 + 2, (unsigned __int64)*a1 >> 6);
  v4 = *a1 >> 6;
  v5 = 0;
  result = 28i64;
  if ( v4 )
  {
    do
    {
      ++v2;
      v7 = v5++ | 0xB000;
      v8 = v7 + result;
      LOBYTE(v7) = v8 ^ ~*(v2 - 1);
      result = v8 >> 2;
      *(v2 - 1) = v7;
    }
    while ( v5 < v4 );
  }
  return result;
}

